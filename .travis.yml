language: php

services:
  - docker

matrix:
  exclude:
    - env: LARAVEL_VERSION=^7.0 TESTBENCH_VERSION=^5.0
      php: 7.1
    - env: LARAVEL_VERSION=^6.0 TESTBENCH_VERSION=^4.0
      php: 7.1

php:
  - 7.4
  - 7.3
  - 7.2
  - 7.1

cache:
  directories:
    - ./vendor
    - $HOME/.composer/cache

env:
  - LARAVEL_VERSION=^7.0 TESTBENCH_VERSION=^5.0
  - LARAVEL_VERSION=^6.0 TESTBENCH_VERSION=^4.0
  - LARAVEL_VERSION=5.8.* TESTBENCH_VERSION=3.8.*

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

before_script:
  - cp docker-compose-ci.yml docker-compose.yml
  - export PHP_VERSION=$(php -r 'preg_match("/^((\d+)[.](\d+))[.](\d+)$/", PHP_VERSION, $m); echo $m[1];')
  - docker-compose up -d
  - |
    sh -c 'docker-compose logs -f mysql | { sed "/mysqld: ready for connections/ q" && kill $$ ;}' || :
  - composer self-update
  - composer require "laravel/framework:${LARAVEL_VERSION}" "orchestra/testbench:${TESTBENCH_VERSION}" --no-update
  - if [ "$PHPUNIT_VERSION" != "" ]; then composer require "phpunit/phpunit:${PHPUNIT_VERSION}" --no-update; fi;
  - composer update
  - mkdir -p build/logs

script:
  - docker-compose exec php sh -c 'cd /code; vendor/bin/phpunit'
